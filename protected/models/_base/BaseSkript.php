<?php

/**
 * This is the model base class for the table "skript".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Skript".
 *
 * Columns in table "skript" available as properties of the model,
 * followed by relations of table "skript" available as properties of the model.
 *
 * @property integer $idskript
 * @property integer $user_iduser
 * @property string $json_skript
 * @property integer $zeit
 *
 * @property User $userIduser
 * @property Sprache[] $spraches
 */
abstract class BaseSkript extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'skript';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Skript|Skripts', $n);
	}

	public static function representingColumn() {
		return 'json_skript';
	}

	public function rules() {
		return array(
			array('user_iduser, json_skript', 'required'),
			array('user_iduser, zeit', 'numerical', 'integerOnly'=>true),
			array('zeit', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idskript, user_iduser, json_skript, zeit', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'userIduser' => array(self::BELONGS_TO, 'User', 'user_iduser'),
			'spraches' => array(self::MANY_MANY, 'Sprache', 'skript_has_sprache(skript_idskript, sprache_idsprache)'),
		);
	}

	public function pivotModels() {
		return array(
			'spraches' => 'SkriptHasSprache',
		);
	}

	public function attributeLabels() {
		return array(
			'idskript' => Yii::t('app', 'Idskript'),
			'user_iduser' => null,
			'json_skript' => Yii::t('app', 'Json Skript'),
			'zeit' => Yii::t('app', 'Zeit'),
			'userIduser' => null,
			'spraches' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idskript', $this->idskript);
		$criteria->compare('user_iduser', $this->user_iduser);
		$criteria->compare('json_skript', $this->json_skript, true);
		$criteria->compare('zeit', $this->zeit);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}